import math
import numpy as np

def f(x, V):
  return V - 0.5 * (x - math.sin(x)) / math.pi

def df(x):
  return -0.5 * (1 - math.cos(x)) / math.pi
  
def newton_raphson(V, x0, tol=1e-6, max_iter=10000):
  x0 = x0
  for i in range(max_iter):
    x1 = x0 - f(x0, V) / df(x0)
    if abs(x1 - x0) < tol:
      return math.degrees(x1) # returns angle in degrees
    x0 = x1
  raise ValueError("Newton-Raphson method did not converge")

r = 5
vol_feet = 100
x0 = 0.5
V = np.array([50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900])
print("MODEL 2")
for i in V:
  angle = newton_raphson(i/(1000 - vol_feet), x0)
  print(f"Angle for V = {i+vol_feet}L is {round(angle, 3)} degrees")
  h = r - r * math.cos(math.radians(angle) / 2)
  print(f"Height for V = {i+vol_feet}L is {round(h, 3)} m")
  x0 = angle
